//version 0.5.0
import java.util.*;
public class Test {
    public static void main(String[] args) {
        //runAllTests();    //Runs all the tests
        //testPartA();      //Runs all tests for part A
        //testPartB();      //Runs all tests for part B
        //testQ1E0();       //Runs tests for 1.0
        //testQ1E1a();       //Runs tests for 1.1 depositMoney
        //testQ1E1b();       //Runs tests for 1.1 withdrawMoney
        //testQ1E4();       //Runs tests for 1.4
    }

    private static void runAllTests() {
        testPartA();
        testPartB();
    }

    private static void testPartA() {
        System.out.println("Testing 1.0: ");
        testQ1E0();
        System.out.println("Testing 1.1a: ");
        testQ1E1a();
        System.out.println("Testing 1.1b: ");
        testQ1E1b();
        System.out.println("Testing 1.4: ");
        testQ1E4();
    }

    private static void testPartB() {
        System.out.println("Testing 2.5a: ");
        testQ2E5a();
    }

    private static void testQ1E0() {
        boolean passed = true;
        PrimeIterator inputs = new PrimeIterator();
        String output = inputs.next().toString();
        String expectedOutput = "2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233";
        for (int i = 0; i < 50; i++) {
            output = output + ", " + inputs.next();
        }
        if (!output.equals(expectedOutput)) {
            passed = false;
            System.out.println("Failed on finding all prime numbers: " +" in Q1E0");
            System.out.println("Expected output: " + expectedOutput);
            System.out.println("But output was: " + output);
        }
        if (passed)
            System.out.println("Passed all tests");
    }

    private static void testQ1E1a() {
        boolean passed = true;
        BankAccount test = new BankAccount("testQ1E1a", 1, 50);
        boolean output;
        int[] inputs = {0, Integer.MAX_VALUE, -1, Integer.MIN_VALUE};
        boolean[] expectedOutputs = {true, true, false, false};
        for (int i = 0; i < inputs.length; i++) {
            output = test.depositMoney(inputs[i]);
            if (output != expectedOutputs[i]) {
                passed = false;
                System.out.println("Failed on input: " + inputs[i] +" in Q1E1a");
                System.out.println("Expected output: " + expectedOutputs[i] + " But output was: " + output);
            }
        }
        if (passed)
            System.out.println("Passed all tests");
    }

    private static void testQ1E1b() {
        boolean passed = true;
        BankAccount test = new BankAccount("testQ1E1b", 1, 50);
        boolean output;
        int[] inputs = {0, Integer.MAX_VALUE, -1, Integer.MIN_VALUE};
        boolean[] expectedOutputs = {true, false, false, false};
        for (int i = 0; i < inputs.length; i++) {
            output = test.withdrawMoney(inputs[i]);
            if (output != expectedOutputs[i]) {
                passed = false;
                System.out.println("Failed on input: " + inputs[i] +" in Q1E1b");
                System.out.println("Expected output: " + expectedOutputs[i] + " But output was: " + output);
            }
        }
        if (passed)
            System.out.println("Passed all tests");
    }

    private static void testQ1E4() {
        boolean passed = true;
        Comparator<Integer> c = new IntegerComparator();
        BinarySearchTree bst;
        String output;
        int[][] inputs = {{4,2,6,1,3,5,7,8},
                {5,2,6,1,4,7,3,8},
                {2,1,3,4,5,6,7,8},
                {8,7,6,5,4,3,2,1}};
        String[] expectedOutputs = {"    1\n  2\n    3\n4\n    5\n  6\n    7\n      8\n",
                "    1\n  2\n      3\n    4\n5\n  6\n    7\n      8\n",
                "  1\n2\n  3\n    4\n      5\n        6\n          7\n            8\n",
                "              1\n            2\n          3\n        4\n      5\n    6\n  7\n8\n"};
        for (int i = 0; i < inputs.length; i++) {
            bst = new BinarySearchTree(c);
            for (int j = 0; j < inputs[i].length; j++)
                bst.insert(inputs[i][j]);
            output = bst.toString();
            if (!output.equals(expectedOutputs[i])) {
                passed = false;
                System.out.println("Failed on input: " + Arrays.toString(inputs[i]) +" in Q1E4");
                System.out.println("Expected output: ");
                System.out.println(expectedOutputs[i]);
                System.out.println("But output was: ");
                System.out.println(output);
            }
        }
        if (passed)
            System.out.println("Passed all tests");
    }

    private static void testQ2E5a() {
        boolean passed = true;
        String output;
        String[] inputs = {""};
        String[] expectedOutputs = {""};
        for (int i = 0; i < inputs.length; i++) {
            output = "";
            if (!output.equals(expectedOutputs[i])) {
                passed = false;
                System.out.println("Failed on input: " + inputs[i] +" in Q2E5a");
                System.out.println("Expected output: " + expectedOutputs[i] + " But output was: " + output);
            }
        }
        if (passed)
            System.out.println("Passed all tests");
    }
}
